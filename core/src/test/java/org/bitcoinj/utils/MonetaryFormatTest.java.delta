diff --git a/core/src/test/java/org/bitcoinj/utils/MonetaryFormatTest.java b/core/src/test/java/org/bitcoinj/utils/MonetaryFormatTest.java
index efae1379b..81e83cadf 100644
--- a/core/src/test/java/org/bitcoinj/utils/MonetaryFormatTest.java
+++ b/core/src/test/java/org/bitcoinj/utils/MonetaryFormatTest.java
@@ -210,14 +210,14 @@ public class MonetaryFormatTest {
 
     @Test
     public void standardCodes() throws Exception {
-        assertEquals("BTC 0.00", MonetaryFormat.BTC.format(Coin.ZERO).toString());
-        assertEquals("mBTC 0.00", MonetaryFormat.MBTC.format(Coin.ZERO).toString());
-        assertEquals("µBTC 0", MonetaryFormat.UBTC.format(Coin.ZERO).toString());
+        assertEquals("BCH 0.00", MonetaryFormat.BTC.format(Coin.ZERO).toString());
+        assertEquals("mBCH 0.00", MonetaryFormat.MBTC.format(Coin.ZERO).toString());
+        assertEquals("µBCH 0", MonetaryFormat.UBTC.format(Coin.ZERO).toString());
     }
 
     @Test
     public void customCode() throws Exception {
-        assertEquals("dBTC 0", MonetaryFormat.UBTC.code(1, "dBTC").shift(1).format(Coin.ZERO).toString());
+        assertEquals("dBCH 0", MonetaryFormat.UBTC.code(1, "dBCH").shift(1).format(Coin.ZERO).toString());
     }
 
     /**
@@ -227,18 +227,18 @@ public class MonetaryFormatTest {
     public void noCode() throws Exception {
         assertEquals("0", MonetaryFormat.UBTC.noCode().shift(0).format(Coin.ZERO).toString());
         // Ensure that inserting a code after codes are wiped, works
-        assertEquals("dBTC 0", MonetaryFormat.UBTC.noCode().code(1, "dBTC").shift(1).format(Coin.ZERO).toString());
+        assertEquals("dBCH 0", MonetaryFormat.UBTC.noCode().code(1, "dBCH").shift(1).format(Coin.ZERO).toString());
     }
 
     @Test
     public void codeOrientation() throws Exception {
-        assertEquals("BTC 0.00", MonetaryFormat.BTC.prefixCode().format(Coin.ZERO).toString());
-        assertEquals("0.00 BTC", MonetaryFormat.BTC.postfixCode().format(Coin.ZERO).toString());
+        assertEquals("BCH 0.00", MonetaryFormat.BTC.prefixCode().format(Coin.ZERO).toString());
+        assertEquals("0.00 BCH", MonetaryFormat.BTC.postfixCode().format(Coin.ZERO).toString());
     }
 
     @Test
     public void codeSeparator() throws Exception {
-        assertEquals("BTC@0.00", MonetaryFormat.BTC.codeSeparator('@').format(Coin.ZERO).toString());
+        assertEquals("BCH@0.00", MonetaryFormat.BTC.codeSeparator('@').format(Coin.ZERO).toString());
     }
 
     @Test(expected = NumberFormatException.class)
