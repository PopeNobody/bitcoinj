diff --git a/core/src/main/java/org/bitcoinj/protocols/channels/PaymentChannelV2ServerState.java b/core/src/main/java/org/bitcoinj/protocols/channels/PaymentChannelV2ServerState.java
index f15fcc54c..18fe59127 100644
--- a/core/src/main/java/org/bitcoinj/protocols/channels/PaymentChannelV2ServerState.java
+++ b/core/src/main/java/org/bitcoinj/protocols/channels/PaymentChannelV2ServerState.java
@@ -116,7 +116,6 @@ public class PaymentChannelV2ServerState extends PaymentChannelServerState {
 
     /**
      * Creates a P2SH script outputting to the client and server pubkeys
-     * @return
      */
     @Override
     protected Script createOutputScript() {
@@ -133,7 +132,10 @@ public class PaymentChannelV2ServerState extends PaymentChannelServerState {
 
     // Signs the first input of the transaction which must spend the multisig contract.
     private void signP2SHInput(Transaction tx, Transaction.SigHash hashType, boolean anyoneCanPay) {
-        TransactionSignature signature = tx.calculateSignature(0, serverKey, createP2SHRedeemScript(), hashType, anyoneCanPay);
+        TransactionSignature signature = tx.getVersion() >= Transaction.FORKID_VERSION ?
+                tx.calculateWitnessSignature(0, serverKey, createP2SHRedeemScript(), tx.getInput(0).getConnectedOutput().getValue(), hashType, anyoneCanPay):
+                tx.calculateSignature(0, serverKey, createP2SHRedeemScript(), hashType, anyoneCanPay);
+
         byte[] mySig = signature.encodeToBitcoin();
         Script scriptSig = ScriptBuilder.createCLTVPaymentChannelP2SHInput(bestValueSignature, mySig, createP2SHRedeemScript());
         tx.getInput(0).setScriptSig(scriptSig);
